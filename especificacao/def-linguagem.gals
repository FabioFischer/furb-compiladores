#Options
GenerateScanner = true
GenerateParser = false
Language = Java
ScannerName = Lexico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
#RegularDefinitions

  letMai: [A-Z]

  letMin: [a-z]

  dig: [0-9]

  caracForm: \\n|\\t|\\s

  exc: [^\n\"\\]

  excCom: [^\n\*\\]

  ws: [\ \t\n\r]
#Tokens


  // expressões

  palavra_reservada: {letMin}+ ( {letMai}? {letMin} )*

  identificador: _ (  ({letMin})+ {letMai}? | {letMai} ) ( ( {letMin} | {dig} ) | ( ( {letMin} | {dig} )+ {letMai} ) )*

  constante_numerica: {dig}+ (\. {dig}+)?

  constante_caractere: ' {caracForm} '

  constante_literal: \" ({exc})* \"

  comentario_linha: /\*\* ( {excCom} | ( \* ) + ( \* {excCom}+ )* )* \ \*\*/


  // palavras reservadas

  AND = palavra_reservada : "and"
  
  ARRAY = palavra_reservada : "array"

  DO = palavra_reservada : "do"

  EXIT = palavra_reservada  : "exit"

  FALSE = palavra_reservada : "false"

  IF = palavra_reservada : "if"

  IFFALSEDO = palavra_reservada : "ifFalseDo"

  IFTRUEDO = palavra_reservada : "ifTrueDo"

  LITERAL = palavra_reservada : "literal"

  LOGICAL = palavra_reservada : "logical"

  NUMBER = palavra_reservada : "number"

  NOT = palavra_reservada : "not"

  OR = palavra_reservada : "or"

  READ = palavra_reservada : "read"

  TRUE = palavra_reservada : "true"

  WRITE = palavra_reservada : "write"

  // símbolos especiais

  ":"
  ","
  "["
  "]"
  "{"
  "}"
  "("
  ")"
  ":="
  "+"
  "-"
  "*"
  "/"
  "="
  "!="
  "<"
  "<="
  ">"
  ">="

  // ignorar caractéres de formação

  : {ws}
